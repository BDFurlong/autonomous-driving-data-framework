name: Static Checking

on:
  # Triggers the workflow on push or pull request events but only for the "main" branch
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main", "release/*", "stable" ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

jobs:
  modules-analysis-rosbag-scene-detection:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [3.9]
    steps:
      - uses: actions/checkout@v2
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v1
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install Requirements
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements-dev.txt
      - name: Static checks and linting (mypy, flake8, black, isort)
        run: scripts/validate.sh --language python --path modules/analysis/rosbag-scene-detection/ --skip-static-checks

  modules-core-eks:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [3.9]
    steps:
      - uses: actions/checkout@v2
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v1
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install Requirements
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements-dev.txt
      - name: Static checks and linting (mypy, flake8, black, isort)
        run: scripts/validate.sh --language python --path modules/core/eks/

  modules-core-metadata-storage:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [3.9]
    steps:
      - uses: actions/checkout@v2
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v1
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install Requirements
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements-dev.txt
      - name: Static checks and linting (mypy, flake8, black, isort)
        run: scripts/validate.sh --language python --path modules/core/metadata-storage/ --skip-static-checks

  modules-core-mwaa:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [3.9]
    steps:
      - uses: actions/checkout@v2
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v1
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install Requirements
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements-dev.txt
      - name: Static checks and linting (mypy, flake8, black, isort)
        run: scripts/validate.sh --language python --path modules/core/mwaa/ --skip-static-checks

  modules-core-neptune:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [3.9]
    steps:
      - uses: actions/checkout@v2
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v1
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install Requirements
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements-dev.txt
      - name: Static checks and linting (mypy, flake8, black, isort)
        run: scripts/validate.sh --language python --path modules/core/neptune/ --skip-static-checks

  modules-core-opensearch:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [3.9]
    steps:
      - uses: actions/checkout@v2
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v1
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install Requirements
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements-dev.txt
      - name: Static checks and linting (mypy, flake8, black, isort)
        run: scripts/validate.sh --language python --path modules/core/opensearch/ --skip-static-checks

  modules-integration-ddb-to-opensearch:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [3.9]
    steps:
      - uses: actions/checkout@v2
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v1
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install Requirements
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements-dev.txt
      - name: Static checks and linting (mypy, flake8, black, isort)
        run: scripts/validate.sh --language python --path modules/integration/ddb-to-opensearch/ --skip-static-checks

  modules-integration-eks-to-opensearch:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [3.9]
    steps:
      - uses: actions/checkout@v2
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v1
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install Requirements
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements-dev.txt
      - name: Static checks and linting (mypy, flake8, black, isort)
        run: scripts/validate.sh --language python --path modules/integration/eks-to-opensearch/ --skip-static-checks

  modules-integration-emr-to-opensearch:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [3.9]
    steps:
      - uses: actions/checkout@v2
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v1
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install Requirements
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements-dev.txt
      - name: Static checks and linting (mypy, flake8, black, isort)
        run: scripts/validate.sh --language python --path modules/integration/emr-to-opensearch/ --skip-static-checks

  modules-optionals-datalake-buckets:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [3.9]
    steps:
      - uses: actions/checkout@v2
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v1
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install Requirements
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements-dev.txt
      - name: Static checks and linting (mypy, flake8, black, isort)
        run: scripts/validate.sh --language python --path modules/optionals/datalake-buckets/ --skip-static-checks

  modules-optionals-networking:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [3.9]
    steps:
      - uses: actions/checkout@v2
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v1
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install Requirements
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements-dev.txt
      - name: Static checks and linting (mypy, flake8, black, isort)
        run: scripts/validate.sh --language python --path modules/optionals/networking/

  modules-simulations-batch-managed:
      runs-on: ubuntu-latest
      strategy:
        matrix:
          python-version: [3.9]
      steps:
        - uses: actions/checkout@v2
        - name: Set up Python ${{ matrix.python-version }}
          uses: actions/setup-python@v1
          with:
            python-version: ${{ matrix.python-version }}
        - name: Install Requirements
          run: |
            python -m pip install --upgrade pip
            pip install -r requirements-dev.txt
        - name: Static checks and linting (mypy, flake8, black, isort)
          run: scripts/validate.sh --language python --path modules/simulations/batch-managed/ --skip-static-checks

  modules-simulations-k8s-managed:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [3.9]
    steps:
      - uses: actions/checkout@v2
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v1
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install Requirements
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements-dev.txt
      - name: Static checks and linting (mypy, flake8, black, isort)
        run: scripts/validate.sh --language python --path modules/simulations/k8s-managed/ --skip-static-checks
