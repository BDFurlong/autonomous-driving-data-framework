deploy:
  phases:
    install:
      commands:
        - pip install -r requirements.txt
        - wget https://get.helm.sh/helm-v3.11.3-linux-amd64.tar.gz
        - tar zxf helm-v3.11.3-linux-amd64.tar.gz
        - mv linux-amd64/helm /usr/local/bin/helm
    build:
      commands:
        - |
          if ! aws s3api head-bucket --bucket "addf-metadata-${AWS_DEFAULT_REGION}-${AWS_ACCOUNT_ID}"; then
            aws s3api create-bucket --bucket "addf-metadata-${AWS_DEFAULT_REGION}-${AWS_ACCOUNT_ID}" --region "${AWS_DEFAULT_REGION}" --create-bucket-configuration LocationConstraint=${AWS_DEFAULT_REGION}
          fi
        - |
          if [[ -n ${ADDF_PARAMETER_NO_REPLICATE} ]]; then
            python3 get-list-of-eks-images.py --eks-version ${ADDF_PARAMETER_EKS_VERSION} --versions-directory data/eks_dockerimage-replication/versions --update-helm-repos --registry-prefix "${AWS_ACCOUNT_ID}.dkr.ecr.${AWS_DEFAULT_REGION}.amazonaws.com/${AWS_CODESEEDER_NAME}-" --no-replicate
          else
            python3 get-list-of-eks-images.py --eks-version ${ADDF_PARAMETER_EKS_VERSION} --versions-directory data/eks_dockerimage-replication/versions --update-helm-repos --registry-prefix "${AWS_ACCOUNT_ID}.dkr.ecr.${AWS_DEFAULT_REGION}.amazonaws.com/${AWS_CODESEEDER_NAME}-"
          fi
        - chmod +x replication.sh
        - bash replication.sh create
        - aws s3 cp charts.yaml s3://addf-metadata-${AWS_DEFAULT_REGION}-${AWS_ACCOUNT_ID}/replication-metadata.json
destroy:
  phases:
    build:
      commands:
        - chmod +x replication.sh
        - bash replication.sh destroy
build_type: BUILD_GENERAL1_LARGE
